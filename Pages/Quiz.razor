@page "/quiz/{QuizId:int}"
@inject IQuizService QuizService

<h2>@quiz?.Title</h2>

@if (currentQuestion != null)
{
    <div class="question">
        <h3>@currentQuestion.Text</h3>
        @foreach (var answer in currentQuestion.Answers)
        {
            <div class="form-check">
                <input class="form-check-input" type="radio" name="quizAnswer" id="@answer.Id" value="@answer.Id" @onchange="() => SelectAnswer(answer.Id)">
                <label class="form-check-label" for="@answer.Id">
                    @answer.Text
                </label>
            </div>
        }
    </div>

    <button class="btn btn-primary mt-3" @onclick="SubmitAnswer" disabled="@(selectedAnswerId == null)">Submit Answer</button>
}
else if (quizCompleted)
{
    <div class="quiz-results">
        <h3>Quiz Completed</h3>
        <p>Your score: @score / @quiz?.Questions.Count</p>
    </div>
}

@code {
    [Parameter]
    public int QuizId { get; set; }

    private Quiz quiz;
    private Question currentQuestion;
    private int currentQuestionIndex = 0;
    private int? selectedAnswerId;
    private int score = 0;
    private bool quizCompleted = false;

    protected override async Task OnInitializedAsync()
    {
        quiz = await QuizService.GetQuizAsync(QuizId);
        await LoadQuestion(0);
    }

    private async Task LoadQuestion(int index)
    {
        if (quiz?.Questions != null && index < quiz.Questions.Count)
        {
            currentQuestionIndex = index;
            currentQuestion = quiz.Questions[index];
            selectedAnswerId = null;
        }
        else
        {
            quizCompleted = true;
        }
    }

    private void SelectAnswer(int answerId)
    {
        selectedAnswerId = answerId;
    }

    private async Task SubmitAnswer()
    {
        if (selectedAnswerId.HasValue)
        {
            var isCorrect = await QuizService.SubmitAnswerAsync(currentQuestion.Id, selectedAnswerId.Value);
            if (isCorrect)
            {
                score++;
            }
            await LoadQuestion(currentQuestionIndex + 1);
        }
    }
}